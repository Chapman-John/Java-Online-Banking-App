package com.bankapp.onlinebanking.controller;

import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.http.ResponseEntity;
import org.springframework.http.HttpStatus;
// import com.bankapp.onlinebanking.dto.AccountDto;
import com.bankapp.onlinebanking.entity.Account;
import com.bankapp.onlinebanking.repository.AccountRepository;
// import com.bankapp.onlinebanking.service.AccountService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

// @RestController
// @RequestMapping("/api/accounts")
// public class AccountController {

//     private AccountService accountService;

//     public AccountController(AccountService accountService) {
//         this.accountService = accountService;
//     }

//     @PostMapping
//     public ResponseEntity<AccountDto> createAccount(@RequestBody AccountDto accountDto) {
//         AccountDto saveAccount = accountService.createAccount(accountDto);
//         return new ResponseEntity<>(saveAccount, HttpStatus.CREATED);
//     }

// }

@Controller // This means that this class is a Controller
@RequestMapping(path = "/demo") // This means URL's start with /demo (after Application path)
public class AccountController {
    @Autowired // This means to get the bean called userRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private AccountRepository accountRepository;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody String addNewAccount(@RequestParam String accountHolderName, @RequestParam double balance) {

        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Account n = new Account();
        n.setAccountHolderName(accountHolderName);
        n.setBalance(balance);
        accountRepository.save(n);
        return "Saved";
    }

    @GetMapping(path = "/all")
    public @ResponseBody Iterable<Account> getAllAccounts() {
        // This returns a JSON or XML with the users
        return accountRepository.findAll();
    }
}